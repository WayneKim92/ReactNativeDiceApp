function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
import React from 'react';
import { View } from 'react-native';
export function Flex(props) {
  const {
    direction = 'column',
    style,
    edgeInsets = {},
    justifyContent,
    alignItems,
    flexBasis,
    flexGrow,
    flexShrink,
    flexWrap,
    ...otherProps
  } = props;
  const viewStyle = {
    flexDirection: direction,
    justifyContent,
    alignItems,
    flexBasis,
    flexGrow,
    flexShrink,
    flexWrap,
    ...edgeInsets
  };

  // @ts-ignore
  return /*#__PURE__*/React.createElement(View, _extends({
    style: [viewStyle, style]
  }, otherProps));
}
//# sourceMappingURL=Flex.js.map