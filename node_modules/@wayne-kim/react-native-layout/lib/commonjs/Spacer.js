"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Spacer = Spacer;
var _react = _interopRequireDefault(require("react"));
var _reactNative = require("react-native");
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
function _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); } /**
 * If you non-experienced jsDoc, refer to https://devhints.io/jsdoc
 */
/**
 * The Spacer component is responsible for handling the space UI.
 * This component can create 2 types of spaces that are flex and size type.
 */
function Spacer(props) {
  const {
    direction = 'both',
    flex,
    size: pixelSize,
    ...rest
  } = props;
  const value = pixelSize;
  const style = {
    flex: flex !== null ? flex : undefined,
    width: direction === 'both' || direction === 'horizontal' ? value : undefined,
    height: direction === 'both' || direction === 'vertical' ? value : undefined
  };
  return /*#__PURE__*/_react.default.createElement(_reactNative.View, _extends({
    style: style
  }, rest));
}
//# sourceMappingURL=Spacer.js.map