{"version":3,"names":["NativeEventEmitter","NativeModules","findNodeHandle","nativeShouldBeMock","JSPropUpdater","_listener","data","component","_tagToComponentMapping","get","viewTag","_updateFromNative","props","constructor","_defineProperty","reanimatedModule","_reanimatedModuleMock","ReanimatedModule","_reanimatedEventEmitter","addOnJSPropsChangeListener","animatedComponent","set","size","addListener","removeOnJSPropsChangeListener","delete","removeAllListeners","Map","removeListeners"],"sources":["JSPropUpdater.ts"],"sourcesContent":["import {\n  NativeEventEmitter,\n  NativeModules,\n  findNodeHandle,\n} from 'react-native';\nimport { nativeShouldBeMock } from '../reanimated2/PlatformChecker';\nimport type { StyleProps } from '../reanimated2';\n\ninterface ListenerData {\n  viewTag: number;\n  props: StyleProps;\n}\n\nexport class JSPropUpdater {\n  private static _tagToComponentMapping = new Map();\n  private _reanimatedEventEmitter: NativeEventEmitter;\n  private static _reanimatedModuleMock = {\n    async addListener(): Promise<void> {\n      // noop\n    },\n    async removeListeners(): Promise<void> {\n      // noop\n    },\n  };\n\n  private static _listener(data: ListenerData) {\n    const component = JSPropUpdater._tagToComponentMapping.get(data.viewTag);\n    component && component._updateFromNative(data.props);\n  }\n\n  constructor() {\n    let reanimatedModule: typeof JSPropUpdater._reanimatedModuleMock;\n    if (nativeShouldBeMock()) {\n      reanimatedModule = JSPropUpdater._reanimatedModuleMock;\n    } else {\n      reanimatedModule = NativeModules.ReanimatedModule;\n    }\n    this._reanimatedEventEmitter = new NativeEventEmitter(reanimatedModule);\n  }\n\n  public addOnJSPropsChangeListener(\n    animatedComponent: React.Component<unknown, unknown>\n  ) {\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropUpdater._tagToComponentMapping.set(viewTag, animatedComponent);\n    if (JSPropUpdater._tagToComponentMapping.size === 1) {\n      this._reanimatedEventEmitter.addListener(\n        'onReanimatedPropsChange',\n        JSPropUpdater._listener\n      );\n    }\n  }\n\n  public removeOnJSPropsChangeListener(\n    animatedComponent: React.Component<unknown, unknown>\n  ) {\n    const viewTag = findNodeHandle(animatedComponent);\n    JSPropUpdater._tagToComponentMapping.delete(viewTag);\n    if (JSPropUpdater._tagToComponentMapping.size === 0) {\n      this._reanimatedEventEmitter.removeAllListeners(\n        'onReanimatedPropsChange'\n      );\n    }\n  }\n}\n"],"mappings":";;;AAAA,SACEA,kBAAkB,EAClBC,aAAa,EACbC,cAAc,QACT,cAAc;AACrB,SAASC,kBAAkB,QAAQ,gCAAgC;AAQnE,OAAO,MAAMC,aAAa,CAAC;EAYzB,OAAeC,SAASA,CAACC,IAAkB,EAAE;IAC3C,MAAMC,SAAS,GAAGH,aAAa,CAACI,sBAAsB,CAACC,GAAG,CAACH,IAAI,CAACI,OAAO,CAAC;IACxEH,SAAS,IAAIA,SAAS,CAACI,iBAAiB,CAACL,IAAI,CAACM,KAAK,CAAC;EACtD;EAEAC,WAAWA,CAAA,EAAG;IAAAC,eAAA;IACZ,IAAIC,gBAA4D;IAChE,IAAIZ,kBAAkB,EAAE,EAAE;MACxBY,gBAAgB,GAAGX,aAAa,CAACY,qBAAqB;IACxD,CAAC,MAAM;MACLD,gBAAgB,GAAGd,aAAa,CAACgB,gBAAgB;IACnD;IACA,IAAI,CAACC,uBAAuB,GAAG,IAAIlB,kBAAkB,CAACe,gBAAgB,CAAC;EACzE;EAEOI,0BAA0BA,CAC/BC,iBAAoD,EACpD;IACA,MAAMV,OAAO,GAAGR,cAAc,CAACkB,iBAAiB,CAAC;IACjDhB,aAAa,CAACI,sBAAsB,CAACa,GAAG,CAACX,OAAO,EAAEU,iBAAiB,CAAC;IACpE,IAAIhB,aAAa,CAACI,sBAAsB,CAACc,IAAI,KAAK,CAAC,EAAE;MACnD,IAAI,CAACJ,uBAAuB,CAACK,WAAW,CACtC,yBAAyB,EACzBnB,aAAa,CAACC,SAAS,CACxB;IACH;EACF;EAEOmB,6BAA6BA,CAClCJ,iBAAoD,EACpD;IACA,MAAMV,OAAO,GAAGR,cAAc,CAACkB,iBAAiB,CAAC;IACjDhB,aAAa,CAACI,sBAAsB,CAACiB,MAAM,CAACf,OAAO,CAAC;IACpD,IAAIN,aAAa,CAACI,sBAAsB,CAACc,IAAI,KAAK,CAAC,EAAE;MACnD,IAAI,CAACJ,uBAAuB,CAACQ,kBAAkB,CAC7C,yBAAyB,CAC1B;IACH;EACF;AACF;AAACZ,eAAA,CAnDYV,aAAa,4BACgB,IAAIuB,GAAG,EAAE;AAAAb,eAAA,CADtCV,aAAa,2BAGe;EACrC,MAAMmB,WAAWA,CAAA,EAAkB;IACjC;EAAA,CACD;EACD,MAAMK,eAAeA,CAAA,EAAkB;IACrC;EAAA;AAEJ,CAAC"}