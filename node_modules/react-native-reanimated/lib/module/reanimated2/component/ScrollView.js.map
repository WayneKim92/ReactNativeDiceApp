{"version":3,"names":["React","Component","forwardRef","ScrollView","createAnimatedComponent","useAnimatedRef","useScrollViewOffset","AnimatedScrollViewComponent","AnimatedScrollView","props","ref","scrollViewOffset","restProps","aref","scrollEventThrottle","createElement","_extends"],"sources":["ScrollView.tsx"],"sourcesContent":["import type { ForwardedRef, RefObject } from 'react';\nimport React, { Component, forwardRef } from 'react';\nimport type { ScrollViewProps } from 'react-native';\nimport { ScrollView } from 'react-native';\nimport createAnimatedComponent from '../../createAnimatedComponent/createAnimatedComponent';\nimport type { SharedValue } from '../commonTypes';\nimport type { AnimateProps } from '../helperTypes';\nimport { useAnimatedRef, useScrollViewOffset } from '../hook';\n\nexport interface AnimatedScrollViewProps extends ScrollViewProps {\n  scrollViewOffset?: SharedValue<number>;\n}\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\ndeclare class AnimatedScrollViewClass extends Component<\n  AnimateProps<AnimatedScrollViewProps>\n> {\n  getNode(): ScrollView;\n}\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\ninterface AnimatedScrollViewInterface extends ScrollView {\n  getNode(): ScrollView;\n}\n\nconst AnimatedScrollViewComponent = createAnimatedComponent(\n  ScrollView as any\n) as any;\n\n// type AnimatedScrollViewFC = React.FC<AnimatedScrollViewProps>;\n\nexport const AnimatedScrollView: AnimatedScrollView = forwardRef(\n  (props: AnimatedScrollViewProps, ref: ForwardedRef<AnimatedScrollView>) => {\n    const { scrollViewOffset, ...restProps } = props;\n    const aref = ref === null ? useAnimatedRef<ScrollView>() : ref;\n\n    if (scrollViewOffset) {\n      useScrollViewOffset(\n        aref as RefObject<AnimatedScrollView>,\n        scrollViewOffset\n      );\n    }\n\n    // Set default scrollEventThrottle, because user expects\n    // to have continuous scroll events.\n    // We set it to 1 so we have peace until\n    // there are 960 fps screens.\n    if (!('scrollEventThrottle' in restProps)) {\n      restProps.scrollEventThrottle = 1;\n    }\n\n    return <AnimatedScrollViewComponent ref={aref} {...restProps} />;\n  }\n) as unknown as AnimatedScrollView;\n\nexport type AnimatedScrollView = typeof AnimatedScrollViewClass &\n  AnimatedScrollViewInterface;\n"],"mappings":";AACA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAEpD,SAASC,UAAU,QAAQ,cAAc;AACzC,OAAOC,uBAAuB,MAAM,uDAAuD;AAG3F,SAASC,cAAc,EAAEC,mBAAmB,QAAQ,SAAS;;AAM7D;;AAMA;AACA;AAKA,MAAMC,2BAA2B,GAAGH,uBAAuB,CACzDD,UAAU,CACJ;;AAER;;AAEA,OAAO,MAAMK,kBAAsC,gBAAGN,UAAU,CAC9D,CAACO,KAA8B,EAAEC,GAAqC,KAAK;EACzE,MAAM;IAAEC,gBAAgB;IAAE,GAAGC;EAAU,CAAC,GAAGH,KAAK;EAChD,MAAMI,IAAI,GAAGH,GAAG,KAAK,IAAI,GAAGL,cAAc,EAAc,GAAGK,GAAG;EAE9D,IAAIC,gBAAgB,EAAE;IACpBL,mBAAmB,CACjBO,IAAI,EACJF,gBAAgB,CACjB;EACH;;EAEA;EACA;EACA;EACA;EACA,IAAI,EAAE,qBAAqB,IAAIC,SAAS,CAAC,EAAE;IACzCA,SAAS,CAACE,mBAAmB,GAAG,CAAC;EACnC;EAEA,oBAAOd,KAAA,CAAAe,aAAA,CAACR,2BAA2B,EAAAS,QAAA;IAACN,GAAG,EAAEG;EAAK,GAAKD,SAAS,EAAI;AAClE,CAAC,CAC+B"}