{"version":3,"names":["Easing","withDelay","withSequence","withTiming","ReduceMotion","getReduceMotionFromConfig","InnerKeyframe","constructor","definitions","_defineProperty","System","delay","delayV","delayFunction","getDelayFunction","keyframes","initialValues","parseDefinitions","callback","callbackV","animations","addAnimation","key","keyframePoints","length","animation","value","duration","easing","linear","apply","map","keyframePoint","includes","transform","push","split","Object","keys","forEach","transformProp","index","transformPropKey","toString","parsedKeyframes","from","Error","to","styleProp","Array","isArray","transformStyle","durationV","animationKeyPoints","getAnimationDuration","currentKeyPoint","maxDuration","currentDuration","reduce","acc","addKeyPoint","_ref","filter","parseInt","sort","a","b","keyPoint","keyframe","addKeyPointWith","durationMs","delayMs","withCallback","reduceMotion","reduceMotionV","_","Keyframe"],"sources":["Keyframe.ts"],"sourcesContent":["import type { EasingFunction } from '../../Easing';\nimport { Easing } from '../../Easing';\nimport { withDelay, withSequence, withTiming } from '../../animation';\nimport type {\n  AnimationFunction,\n  EntryExitAnimationFunction,\n  IEntryExitAnimationBuilder,\n  KeyframeProps,\n  StylePropsWithArrayTransform,\n} from './commonTypes';\nimport type { StyleProps } from '../../commonTypes';\nimport type { TransformArrayItem } from '../../helperTypes';\nimport { ReduceMotion } from '../../commonTypes';\nimport { getReduceMotionFromConfig } from '../../animation/util';\n\ninterface KeyframePoint {\n  duration: number;\n  value: number | string;\n  easing?: EasingFunction;\n}\ninterface ParsedKeyframesDefinition {\n  initialValues: StyleProps;\n  keyframes: Record<string, KeyframePoint[]>;\n}\nclass InnerKeyframe implements IEntryExitAnimationBuilder {\n  durationV?: number;\n  delayV?: number;\n  reduceMotionV: ReduceMotion = ReduceMotion.System;\n  callbackV?: (finished: boolean) => void;\n  definitions: Record<string, KeyframeProps>;\n\n  /*\n    Keyframe definition should be passed in the constructor as the map\n    which keys are between range 0 - 100 (%) and correspond to the point in the animation progress.\n  */\n  constructor(definitions: Record<string, KeyframeProps>) {\n    this.definitions = definitions;\n  }\n\n  private parseDefinitions(): ParsedKeyframesDefinition {\n    /* \n        Each style property contain an array with all their key points: \n        value, duration of transition to that value, and optional easing function (defaults to Linear)\n    */\n    const parsedKeyframes: Record<string, KeyframePoint[]> = {};\n    /*\n      Parsing keyframes 'from' and 'to'.\n    */\n    if (this.definitions.from) {\n      if (this.definitions['0']) {\n        throw new Error(\n          \"[Reanimated] You cannot provide both keyframe 0 and 'from' as they both specified initial values.\"\n        );\n      }\n      this.definitions['0'] = this.definitions.from;\n      delete this.definitions.from;\n    }\n    if (this.definitions.to) {\n      if (this.definitions['100']) {\n        throw new Error(\n          \"[Reanimated] You cannot provide both keyframe 100 and 'to' as they both specified values at the end of the animation.\"\n        );\n      }\n      this.definitions['100'] = this.definitions.to;\n      delete this.definitions.to;\n    }\n    /* \n       One of the assumptions is that keyframe  0 is required to properly set initial values.\n       Every other keyframe should contain properties from the set provided as initial values.\n    */\n    if (!this.definitions['0']) {\n      throw new Error(\n        \"[Reanimated] Please provide 0 or 'from' keyframe with initial state of your object.\"\n      );\n    }\n    const initialValues: StyleProps = this.definitions['0'] as StyleProps;\n    /*\n      Initialize parsedKeyframes for properties provided in initial keyframe\n    */\n    Object.keys(initialValues).forEach((styleProp: string) => {\n      if (styleProp === 'transform') {\n        if (!Array.isArray(initialValues.transform)) {\n          return;\n        }\n        initialValues.transform.forEach((transformStyle, index) => {\n          Object.keys(transformStyle).forEach((transformProp: string) => {\n            parsedKeyframes[index.toString() + '_transform:' + transformProp] =\n              [];\n          });\n        });\n      } else {\n        parsedKeyframes[styleProp] = [];\n      }\n    });\n\n    const duration: number = this.durationV ? this.durationV : 500;\n    const animationKeyPoints: Array<string> = Array.from(\n      Object.keys(this.definitions)\n    );\n\n    const getAnimationDuration = (\n      key: string,\n      currentKeyPoint: number\n    ): number => {\n      const maxDuration = (currentKeyPoint / 100) * duration;\n      const currentDuration = parsedKeyframes[key].reduce(\n        (acc: number, value: KeyframePoint) => acc + value.duration,\n        0\n      );\n      return maxDuration - currentDuration;\n    };\n\n    /* \n       Other keyframes can't contain properties that were not specified in initial keyframe.\n    */\n    const addKeyPoint = ({\n      key,\n      value,\n      currentKeyPoint,\n      easing,\n    }: {\n      key: string;\n      value: string | number;\n      currentKeyPoint: number;\n      easing?: EasingFunction;\n    }): void => {\n      if (!(key in parsedKeyframes)) {\n        throw new Error(\n          \"[Reanimated] Keyframe can contain only that set of properties that were provide with initial values (keyframe 0 or 'from')\"\n        );\n      }\n      parsedKeyframes[key].push({\n        duration: getAnimationDuration(key, currentKeyPoint),\n        value: value,\n        easing: easing,\n      });\n    };\n    animationKeyPoints\n      .filter((value: string) => parseInt(value) !== 0)\n      .sort((a: string, b: string) => parseInt(a) - parseInt(b))\n      .forEach((keyPoint: string) => {\n        if (parseInt(keyPoint) < 0 || parseInt(keyPoint) > 100) {\n          throw new Error(\n            '[Reanimated] Keyframe should be in between range 0 - 100.'\n          );\n        }\n        const keyframe: KeyframeProps = this.definitions[keyPoint];\n        const easing = keyframe.easing;\n        delete keyframe.easing;\n        const addKeyPointWith = (key: string, value: string | number) =>\n          addKeyPoint({\n            key,\n            value,\n            currentKeyPoint: parseInt(keyPoint),\n            easing,\n          });\n        Object.keys(keyframe).forEach((key: string) => {\n          if (key === 'transform') {\n            if (!Array.isArray(keyframe.transform)) {\n              return;\n            }\n            keyframe.transform.forEach(\n              (transformStyle: { [key: string]: any }, index) => {\n                Object.keys(transformStyle).forEach((transformProp: string) => {\n                  addKeyPointWith(\n                    index.toString() + '_transform:' + transformProp,\n                    transformStyle[transformProp]\n                  );\n                });\n              }\n            );\n          } else {\n            addKeyPointWith(key, keyframe[key]);\n          }\n        });\n      });\n    return { initialValues: initialValues, keyframes: parsedKeyframes };\n  }\n\n  duration(durationMs: number): InnerKeyframe {\n    this.durationV = durationMs;\n    return this;\n  }\n\n  delay(delayMs: number): InnerKeyframe {\n    this.delayV = delayMs;\n    return this;\n  }\n\n  withCallback(callback: (finsihed: boolean) => void): InnerKeyframe {\n    this.callbackV = callback;\n    return this;\n  }\n\n  reduceMotion(reduceMotionV: ReduceMotion): this {\n    this.reduceMotionV = reduceMotionV;\n    return this;\n  }\n\n  private getDelayFunction(): AnimationFunction {\n    const delay = this.delayV;\n    const reduceMotion = this.reduceMotionV;\n    return delay\n      ? (delay, animation) => {\n          'worklet';\n          return withDelay(delay, animation, reduceMotion);\n        }\n      : (_, animation) => {\n          'worklet';\n          animation.reduceMotion = getReduceMotionFromConfig(reduceMotion);\n          return animation;\n        };\n  }\n\n  build = (): EntryExitAnimationFunction => {\n    const delay = this.delayV;\n    const delayFunction = this.getDelayFunction();\n    const { keyframes, initialValues } = this.parseDefinitions();\n    const callback = this.callbackV;\n\n    return () => {\n      'worklet';\n      const animations: StylePropsWithArrayTransform = {};\n\n      /* \n            For each style property, an animations sequence is created that corresponds with its key points.\n            Transform style properties require special handling because of their nested structure.\n      */\n      const addAnimation = (key: string) => {\n        const keyframePoints = keyframes[key];\n        // in case if property was only passed as initial value\n        if (keyframePoints.length === 0) {\n          return;\n        }\n        const animation = delayFunction(\n          delay,\n          keyframePoints.length === 1\n            ? withTiming(keyframePoints[0].value, {\n                duration: keyframePoints[0].duration,\n                easing: keyframePoints[0].easing\n                  ? keyframePoints[0].easing\n                  : Easing.linear,\n              })\n            : withSequence.apply(\n                this,\n                keyframePoints.map((keyframePoint: KeyframePoint) =>\n                  withTiming(keyframePoint.value, {\n                    duration: keyframePoint.duration,\n                    easing: keyframePoint.easing\n                      ? keyframePoint.easing\n                      : Easing.linear,\n                  })\n                )\n              )\n        );\n        if (key.includes('transform')) {\n          if (!('transform' in animations)) {\n            animations.transform = [];\n          }\n          // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n          animations.transform!.push(<TransformArrayItem>{\n            [key.split(':')[1]]: animation,\n          });\n        } else {\n          animations[key] = animation;\n        }\n      };\n      Object.keys(initialValues).forEach((key: string) => {\n        if (key.includes('transform')) {\n          initialValues[key].forEach(\n            (transformProp: Record<string, number | string>, index: number) => {\n              Object.keys(transformProp).forEach((transformPropKey: string) => {\n                addAnimation(\n                  index.toString() + '_transform:' + transformPropKey\n                );\n              });\n            }\n          );\n        } else {\n          addAnimation(key);\n        }\n      });\n      return {\n        animations: animations,\n        initialValues: initialValues,\n        callback: callback,\n      };\n    };\n  };\n}\n\n// TODO TYPESCRIPT This is a temporary type to get rid of .d.ts file.\nexport declare class ReanimatedKeyframe {\n  constructor(definitions: Record<string, KeyframeProps>);\n  duration(durationMs: number): ReanimatedKeyframe;\n  delay(delayMs: number): ReanimatedKeyframe;\n  reduceMotion(reduceMotionV: ReduceMotion): ReanimatedKeyframe;\n  withCallback(callback: (finished: boolean) => void): ReanimatedKeyframe;\n}\n\n// TODO TYPESCRIPT This temporary cast is to get rid of .d.ts file.\nexport const Keyframe = InnerKeyframe as unknown as typeof ReanimatedKeyframe;\n"],"mappings":"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"}