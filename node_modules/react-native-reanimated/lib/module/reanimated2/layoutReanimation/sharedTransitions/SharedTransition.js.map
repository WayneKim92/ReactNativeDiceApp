{"version":3,"names":["withTiming","LayoutAnimationType","SharedTransitionType","ReduceMotion","configureLayoutAnimations","ProgressTransitionManager","SUPPORTED_PROPS","SharedTransition","constructor","_defineProperty","System","undefined","custom","customAnimationFactory","_customAnimationFactory","progressAnimation","progressAnimationCallback","_customProgressAnimation","viewTag","values","progress","newStyles","_notifyAboutProgress","duration","_transitionDuration","reduceMotion","_reduceMotion","defaultTransitionType","transitionType","_defaultTransitionType","registerTransition","sharedTransitionTag","transitionAnimation","getTransitionAnimation","getProgressAnimation","ANIMATION","PROGRESS_ANIMATION","layoutAnimationType","SHARED_ELEMENT_TRANSITION","SHARED_ELEMENT_TRANSITION_PROGRESS","_progressTransitionManager","addProgressAnimation","unregisterTransition","removeProgressAnimation","getReduceMotion","_animation","buildAnimation","_progressAnimation","buildProgressAnimation","animationFactory","transitionDuration","animations","initialValues","key","includes","Error","propName","matrix","targetTransformMatrix","transformMatrix","capitalizedPropName","charAt","toUpperCase","slice","keyToTargetValue","currentTransformMatrix","keyToCurrentValue","propertyName","currentMatrix","targetMatrix","newMatrix","Array","i","PropertyName","currentPropertyName","targetPropertyName","currentValue","targetValue"],"sources":["SharedTransition.ts"],"sourcesContent":["import { withTiming } from '../../animation';\nimport type {\n  SharedTransitionAnimationsFunction,\n  SharedTransitionAnimationsValues,\n  CustomProgressAnimation,\n  ProgressAnimation,\n  LayoutAnimationsOptions,\n} from '../animationBuilder/commonTypes';\nimport {\n  LayoutAnimationType,\n  SharedTransitionType,\n} from '../animationBuilder/commonTypes';\nimport type { StyleProps } from '../../commonTypes';\nimport { ReduceMotion } from '../../commonTypes';\nimport { configureLayoutAnimations } from '../../core';\nimport { ProgressTransitionManager } from './ProgressTransitionManager';\n\nconst SUPPORTED_PROPS = [\n  'width',\n  'height',\n  'originX',\n  'originY',\n  'transform',\n  'borderRadius',\n] as const;\n\ntype AnimationFactory = (\n  values: SharedTransitionAnimationsValues\n) => StyleProps;\n\nexport class SharedTransition {\n  private _customAnimationFactory: AnimationFactory | null = null;\n  private _animation: SharedTransitionAnimationsFunction | null = null;\n  private _transitionDuration = 500;\n  private _reduceMotion: ReduceMotion = ReduceMotion.System;\n  private _customProgressAnimation?: ProgressAnimation = undefined;\n  private _progressAnimation?: ProgressAnimation = undefined;\n  private _defaultTransitionType?: SharedTransitionType = undefined;\n  private static _progressTransitionManager = new ProgressTransitionManager();\n\n  public custom(customAnimationFactory: AnimationFactory): SharedTransition {\n    this._customAnimationFactory = customAnimationFactory;\n    return this;\n  }\n\n  public progressAnimation(\n    progressAnimationCallback: CustomProgressAnimation\n  ): SharedTransition {\n    this._customProgressAnimation = (viewTag, values, progress) => {\n      'worklet';\n      const newStyles = progressAnimationCallback(values, progress);\n      _notifyAboutProgress(viewTag, newStyles, true);\n    };\n    return this;\n  }\n\n  public duration(duration: number): SharedTransition {\n    this._transitionDuration = duration;\n    return this;\n  }\n\n  public reduceMotion(_reduceMotion: ReduceMotion): this {\n    this._reduceMotion = _reduceMotion;\n    return this;\n  }\n\n  public defaultTransitionType(\n    transitionType: SharedTransitionType\n  ): SharedTransition {\n    this._defaultTransitionType = transitionType;\n    return this;\n  }\n\n  public registerTransition(\n    viewTag: number,\n    sharedTransitionTag: string\n  ): void {\n    const transitionAnimation = this.getTransitionAnimation();\n    const progressAnimation = this.getProgressAnimation();\n    if (!this._defaultTransitionType) {\n      if (this._customAnimationFactory && !this._customProgressAnimation) {\n        this._defaultTransitionType = SharedTransitionType.ANIMATION;\n      } else {\n        this._defaultTransitionType = SharedTransitionType.PROGRESS_ANIMATION;\n      }\n    }\n    const layoutAnimationType =\n      this._defaultTransitionType === SharedTransitionType.ANIMATION\n        ? LayoutAnimationType.SHARED_ELEMENT_TRANSITION\n        : LayoutAnimationType.SHARED_ELEMENT_TRANSITION_PROGRESS;\n    configureLayoutAnimations(\n      viewTag,\n      layoutAnimationType,\n      transitionAnimation,\n      sharedTransitionTag\n    );\n    SharedTransition._progressTransitionManager.addProgressAnimation(\n      viewTag,\n      progressAnimation\n    );\n  }\n\n  public unregisterTransition(viewTag: number): void {\n    SharedTransition._progressTransitionManager.removeProgressAnimation(\n      viewTag\n    );\n  }\n\n  public getReduceMotion(): ReduceMotion {\n    return this._reduceMotion;\n  }\n\n  private getTransitionAnimation(): SharedTransitionAnimationsFunction {\n    if (!this._animation) {\n      this.buildAnimation();\n    }\n    return this._animation!;\n  }\n\n  private getProgressAnimation(): ProgressAnimation {\n    if (!this._progressAnimation) {\n      this.buildProgressAnimation();\n    }\n    return this._progressAnimation!;\n  }\n\n  private buildAnimation() {\n    const animationFactory = this._customAnimationFactory;\n    const transitionDuration = this._transitionDuration;\n    const reduceMotion = this._reduceMotion;\n    this._animation = (values: SharedTransitionAnimationsValues) => {\n      'worklet';\n      let animations: {\n        [key: string]: any;\n      } = {};\n      const initialValues: {\n        [key: string]: any;\n      } = {};\n\n      if (animationFactory) {\n        animations = animationFactory(values);\n        for (const key in animations) {\n          if (!(SUPPORTED_PROPS as readonly string[]).includes(key)) {\n            throw new Error(\n              `[Reanimated] The prop '${key}' is not supported yet.`\n            );\n          }\n        }\n      } else {\n        for (const propName of SUPPORTED_PROPS) {\n          if (propName === 'transform') {\n            const matrix = values.targetTransformMatrix;\n            animations.transformMatrix = withTiming(matrix, {\n              reduceMotion,\n              duration: transitionDuration,\n            });\n          } else {\n            const capitalizedPropName = `${propName\n              .charAt(0)\n              .toUpperCase()}${propName.slice(\n              1\n            )}` as Capitalize<LayoutAnimationsOptions>;\n            const keyToTargetValue = `target${capitalizedPropName}` as const;\n            animations[propName] = withTiming(values[keyToTargetValue], {\n              reduceMotion,\n              duration: transitionDuration,\n            });\n          }\n        }\n      }\n\n      for (const propName in animations) {\n        if (propName === 'transform') {\n          initialValues.transformMatrix = values.currentTransformMatrix;\n        } else {\n          const capitalizedPropName = (propName.charAt(0).toUpperCase() +\n            propName.slice(1)) as Capitalize<LayoutAnimationsOptions>;\n          const keyToCurrentValue = `current${capitalizedPropName}` as const;\n          initialValues[propName] = values[keyToCurrentValue];\n        }\n      }\n\n      return { initialValues, animations };\n    };\n  }\n\n  private buildProgressAnimation() {\n    if (this._customProgressAnimation) {\n      this._progressAnimation = this._customProgressAnimation;\n      return;\n    }\n    this._progressAnimation = (viewTag, values, progress) => {\n      'worklet';\n      const newStyles: { [key: string]: number | number[] } = {};\n      for (const propertyName of SUPPORTED_PROPS) {\n        if (propertyName === 'transform') {\n          // this is not the perfect solution, but at this moment it just interpolates the whole\n          // matrix instead of interpolating scale, translate, rotate, etc. separately\n          const currentMatrix = values.currentTransformMatrix as number[];\n          const targetMatrix = values.targetTransformMatrix as number[];\n          const newMatrix = new Array(9);\n          for (let i = 0; i < 9; i++) {\n            newMatrix[i] =\n              progress * (targetMatrix[i] - currentMatrix[i]) +\n              currentMatrix[i];\n          }\n          newStyles.transformMatrix = newMatrix;\n        } else {\n          // PropertyName == propertyName with capitalized fist letter, (width -> Width)\n          const PropertyName = (propertyName.charAt(0).toUpperCase() +\n            propertyName.slice(1)) as Capitalize<LayoutAnimationsOptions>;\n          const currentPropertyName = `current${PropertyName}` as const;\n          const targetPropertyName = `target${PropertyName}` as const;\n\n          const currentValue = values[currentPropertyName];\n          const targetValue = values[targetPropertyName];\n\n          newStyles[propertyName] =\n            progress * (targetValue - currentValue) + currentValue;\n        }\n      }\n      _notifyAboutProgress(viewTag, newStyles, true);\n    };\n  }\n\n  // static builder methods\n\n  public static custom(\n    customAnimationFactory: AnimationFactory\n  ): SharedTransition {\n    return new SharedTransition().custom(customAnimationFactory);\n  }\n\n  public static duration(duration: number): SharedTransition {\n    return new SharedTransition().duration(duration);\n  }\n\n  public static progressAnimation(\n    progressAnimationCallback: CustomProgressAnimation\n  ): SharedTransition {\n    return new SharedTransition().progressAnimation(progressAnimationCallback);\n  }\n\n  public static defaultTransitionType(\n    transitionType: SharedTransitionType\n  ): SharedTransition {\n    return new SharedTransition().defaultTransitionType(transitionType);\n  }\n\n  public static reduceMotion(_reduceMotion: ReduceMotion): SharedTransition {\n    return new SharedTransition().reduceMotion(_reduceMotion);\n  }\n}\n"],"mappings":"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"}