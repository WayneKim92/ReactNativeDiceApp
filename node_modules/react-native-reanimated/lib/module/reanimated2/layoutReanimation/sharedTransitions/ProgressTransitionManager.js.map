{"version":3,"names":["runOnUIImmediately","registerEventHandler","unregisterEventHandler","Platform","ProgressTransitionManager","constructor","_defineProperty","isRegistered","onTransitionProgress","onAppear","onDisappear","onSwipeDismiss","addProgressAnimation","viewTag","progressAnimation","global","ProgressTransitionRegister","registerEventHandlers","removeProgressAnimation","unregisterEventHandlers","_sharedElementCount","eventHandler","_eventHandler","eventPrefix","OS","lastProgressValue","event","progress","frame","onTransitionEnd","onAndroidFinishTransitioning","createProgressTransitionRegister","progressAnimations","Map","snapshots","currentTransitions","Set","toRemove","progressTransitionManager","set","size","add","delete","onTransitionStart","snapshot","get","removeViews","arguments","length","undefined","_notifyAboutEnd","clear"],"sources":["ProgressTransitionManager.ts"],"sourcesContent":["import { runOnUIImmediately } from '../../threads';\nimport type { ProgressAnimation } from '../animationBuilder/commonTypes';\nimport { registerEventHandler, unregisterEventHandler } from '../../core';\nimport { Platform } from 'react-native';\n\ntype TransitionProgressEvent = {\n  closing: number;\n  goingForward: number;\n  eventName: string;\n  progress: number;\n  target: number;\n};\n\nexport class ProgressTransitionManager {\n  private _sharedElementCount = 0;\n  private _eventHandler = {\n    isRegistered: false,\n    onTransitionProgress: -1,\n    onAppear: -1,\n    onDisappear: -1,\n    onSwipeDismiss: -1,\n  };\n\n  public addProgressAnimation(\n    viewTag: number,\n    progressAnimation: ProgressAnimation\n  ) {\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.addProgressAnimation(\n        viewTag,\n        progressAnimation\n      );\n    })();\n    this.registerEventHandlers();\n  }\n\n  public removeProgressAnimation(viewTag: number) {\n    this.unregisterEventHandlers();\n    runOnUIImmediately(() => {\n      'worklet';\n      global.ProgressTransitionRegister.removeProgressAnimation(viewTag);\n    })();\n  }\n\n  private registerEventHandlers() {\n    this._sharedElementCount++;\n    const eventHandler = this._eventHandler;\n    if (!eventHandler.isRegistered) {\n      eventHandler.isRegistered = true;\n      const eventPrefix = Platform.OS === 'android' ? 'on' : 'top';\n      let lastProgressValue = -1;\n      eventHandler.onTransitionProgress = registerEventHandler(\n        (event: TransitionProgressEvent) => {\n          'worklet';\n          const progress = event.progress;\n          if (progress === lastProgressValue) {\n            // During screen transition, handler receives two events with the same progress\n            // value for both screens, but for modals, there is only one event. To optimize\n            // performance and avoid unnecessary worklet calls, let's skip the second event.\n            return;\n          }\n          lastProgressValue = progress;\n          global.ProgressTransitionRegister.frame(progress);\n        },\n        eventPrefix + 'TransitionProgress'\n      );\n      eventHandler.onAppear = registerEventHandler(() => {\n        'worklet';\n        global.ProgressTransitionRegister.onTransitionEnd();\n      }, eventPrefix + 'Appear');\n\n      if (Platform.OS === 'android') {\n        // onFinishTransitioning event is available only on Android and\n        // is used to handle closing modals\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onAndroidFinishTransitioning();\n        }, 'onFinishTransitioning');\n      } else if (Platform.OS === 'ios') {\n        // topDisappear event is required to handle closing modals on iOS\n        eventHandler.onDisappear = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd(true);\n        }, 'topDisappear');\n        eventHandler.onSwipeDismiss = registerEventHandler(() => {\n          'worklet';\n          global.ProgressTransitionRegister.onTransitionEnd();\n        }, 'topGestureCancel');\n      }\n    }\n  }\n\n  private unregisterEventHandlers(): void {\n    this._sharedElementCount--;\n    if (this._sharedElementCount === 0) {\n      const eventHandler = this._eventHandler;\n      eventHandler.isRegistered = false;\n      if (eventHandler.onTransitionProgress !== -1) {\n        unregisterEventHandler(eventHandler.onTransitionProgress);\n        eventHandler.onTransitionProgress = -1;\n      }\n      if (eventHandler.onAppear !== -1) {\n        unregisterEventHandler(eventHandler.onAppear);\n        eventHandler.onAppear = -1;\n      }\n      if (eventHandler.onDisappear !== -1) {\n        unregisterEventHandler(eventHandler.onDisappear);\n        eventHandler.onDisappear = -1;\n      }\n      if (eventHandler.onSwipeDismiss !== -1) {\n        unregisterEventHandler(eventHandler.onSwipeDismiss);\n        eventHandler.onSwipeDismiss = -1;\n      }\n    }\n  }\n}\n\nfunction createProgressTransitionRegister() {\n  'worklet';\n  const progressAnimations = new Map<number, ProgressAnimation>();\n  const snapshots = new Map<number, any>();\n  const currentTransitions = new Set<number>();\n  const toRemove = new Set<number>();\n\n  const progressTransitionManager = {\n    addProgressAnimation: (\n      viewTag: number,\n      progressAnimation: ProgressAnimation\n    ) => {\n      progressAnimations.set(viewTag, progressAnimation);\n    },\n    removeProgressAnimation: (viewTag: number) => {\n      if (progressAnimations.size > 1) {\n        // Remove the animation config after the transition is finished\n        toRemove.add(viewTag);\n      } else {\n        progressAnimations.delete(viewTag);\n      }\n    },\n    onTransitionStart: (viewTag: number, snapshot: any) => {\n      snapshots.set(viewTag, snapshot);\n      currentTransitions.add(viewTag);\n      // set initial style for re-parented components\n      progressTransitionManager.frame(0);\n    },\n    frame: (progress: number) => {\n      for (const viewTag of currentTransitions) {\n        const progressAnimation = progressAnimations.get(viewTag);\n        const snapshot = snapshots.get(viewTag);\n        progressAnimation!(viewTag, snapshot, progress);\n      }\n    },\n    onAndroidFinishTransitioning: () => {\n      if (toRemove.size > 0) {\n        // it should be ran only on modal closing\n        progressTransitionManager.onTransitionEnd();\n      }\n    },\n    onTransitionEnd: (removeViews = false) => {\n      for (const viewTag of currentTransitions) {\n        _notifyAboutEnd(viewTag, removeViews);\n      }\n      currentTransitions.clear();\n      snapshots.clear();\n      if (toRemove.size > 0) {\n        for (const viewTag of toRemove) {\n          progressAnimations.delete(viewTag);\n        }\n        toRemove.clear();\n      }\n    },\n  };\n  return progressTransitionManager;\n}\n\nrunOnUIImmediately(() => {\n  'worklet';\n  global.ProgressTransitionRegister = createProgressTransitionRegister();\n})();\n\nexport type ProgressTransitionRegister = ReturnType<\n  typeof createProgressTransitionRegister\n>;\n"],"mappings":"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"}