import type { Component, ComponentClass, FunctionComponent } from 'react';
import '../reanimated2/layoutReanimation/animationsManager';
import type { AnimateProps } from '../reanimated2/helperTypes';
type Options<P> = {
    setNativeProps: (ref: ComponentRef, props: P) => void;
};
interface ComponentRef extends Component {
    setNativeProps?: (props: Record<string, unknown>) => void;
    getScrollableNode?: () => ComponentRef;
    getAnimatableRef?: () => ComponentRef;
}
export default function createAnimatedComponent<P extends object>(component: FunctionComponent<P>, options?: Options<P>): FunctionComponent<AnimateProps<P>>;
export default function createAnimatedComponent<P extends object>(component: ComponentClass<P>, options?: Options<P>): ComponentClass<AnimateProps<P>>;
export {};
