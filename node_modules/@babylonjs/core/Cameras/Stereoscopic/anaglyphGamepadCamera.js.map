{"version":3,"file":"anaglyphGamepadCamera.js","sourceRoot":"","sources":["../../../../../dev/core/src/Cameras/Stereoscopic/anaglyphGamepadCamera.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAC9C,OAAO,EAAE,aAAa,EAAE,MAAM,6BAA6B,CAAC;AAE5D,OAAO,EAAE,OAAO,EAAE,MAAM,yBAAyB,CAAC;AAClD,OAAO,EAAE,IAAI,EAAE,MAAM,YAAY,CAAC;AAClC,OAAO,EAAE,8BAA8B,EAAE,MAAM,yCAAyC,CAAC;AAEzF,IAAI,CAAC,kBAAkB,CAAC,uBAAuB,EAAE,CAAC,IAAI,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE;IACtE,OAAO,GAAG,EAAE,CAAC,IAAI,qBAAqB,CAAC,IAAI,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,OAAO,CAAC,mBAAmB,EAAE,KAAK,CAAC,CAAC;AACrG,CAAC,CAAC,CAAC;AAEH;;;GAGG;AACH,MAAM,OAAO,qBAAsB,SAAQ,aAAa;IACpD;;;;;;OAMG;IACH,YAAY,IAAY,EAAE,QAAiB,EAAE,kBAA0B,EAAE,KAAa;QAClF,KAAK,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;QAavB,gBAAW,GAAG,GAAG,EAAE,CAAC,8BAA8B,CAAC,IAAI,CAAC,CAAC;QAZ/D,IAAI,CAAC,kBAAkB,GAAG,kBAAkB,CAAC;QAC7C,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,8BAA8B,EAAE,EAAE,kBAAkB,EAAE,kBAAkB,EAAE,CAAC,CAAC;IAC7G,CAAC;IAED;;;OAGG;IACI,YAAY;QACf,OAAO,uBAAuB,CAAC;IACnC,CAAC;CAGJ","sourcesContent":["import { Camera } from \"../../Cameras/camera\";\r\nimport { GamepadCamera } from \"../../Cameras/gamepadCamera\";\r\nimport type { Scene } from \"../../scene\";\r\nimport { Vector3 } from \"../../Maths/math.vector\";\r\nimport { Node } from \"../../node\";\r\nimport { setStereoscopicAnaglyphRigMode } from \"../RigModes/stereoscopicAnaglyphRigMode\";\r\n\r\nNode.AddNodeConstructor(\"AnaglyphGamepadCamera\", (name, scene, options) => {\r\n    return () => new AnaglyphGamepadCamera(name, Vector3.Zero(), options.interaxial_distance, scene);\r\n});\r\n\r\n/**\r\n * Camera used to simulate anaglyphic rendering (based on GamepadCamera)\r\n * @see https://doc.babylonjs.com/features/featuresDeepDive/cameras/camera_introduction#anaglyph-cameras\r\n */\r\nexport class AnaglyphGamepadCamera extends GamepadCamera {\r\n    /**\r\n     * Creates a new AnaglyphGamepadCamera\r\n     * @param name defines camera name\r\n     * @param position defines initial position\r\n     * @param interaxialDistance defines distance between each color axis\r\n     * @param scene defines the hosting scene\r\n     */\r\n    constructor(name: string, position: Vector3, interaxialDistance: number, scene?: Scene) {\r\n        super(name, position, scene);\r\n        this.interaxialDistance = interaxialDistance;\r\n        this.setCameraRigMode(Camera.RIG_MODE_STEREOSCOPIC_ANAGLYPH, { interaxialDistance: interaxialDistance });\r\n    }\r\n\r\n    /**\r\n     * Gets camera class name\r\n     * @returns AnaglyphGamepadCamera\r\n     */\r\n    public getClassName(): string {\r\n        return \"AnaglyphGamepadCamera\";\r\n    }\r\n\r\n    protected _setRigMode = () => setStereoscopicAnaglyphRigMode(this);\r\n}\r\n"]}