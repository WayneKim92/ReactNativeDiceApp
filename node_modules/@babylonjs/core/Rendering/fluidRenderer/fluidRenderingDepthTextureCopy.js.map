{"version":3,"file":"fluidRenderingDepthTextureCopy.js","sourceRoot":"","sources":["../../../../../dev/core/src/Rendering/fluidRenderer/fluidRenderingDepthTextureCopy.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,mCAA+B;AAInD,OAAO,EAAE,oBAAoB,EAAE,2CAAuC;AAEtE,gBAAgB;AAChB,MAAM,OAAO,8BAA8B;IAKvC,IAAW,cAAc;QACrB,OAAO,IAAI,CAAC,eAAe,CAAC;IAChC,CAAC;IAED,YAAY,MAAc,EAAE,KAAa,EAAE,MAAc,EAAE,OAAO,GAAG,CAAC;QAClE,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;QACtB,IAAI,CAAC,qBAAqB,GAAG,IAAI,oBAAoB,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAEpE,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,OAAO,CAAC,yBAAyB,CACzD,EAAE,KAAK,EAAE,MAAM,EAAE,EACjB;YACI,eAAe,EAAE,KAAK;YACtB,IAAI,EAAE,SAAS,CAAC,yBAAyB;YACzC,MAAM,EAAE,SAAS,CAAC,eAAe;YACjC,YAAY,EAAE,SAAS,CAAC,4BAA4B;YACpD,mBAAmB,EAAE,IAAI;YACzB,qBAAqB,EAAE,KAAK;YAC5B,OAAO;YACP,iBAAiB,EAAE,IAAI;YACvB,KAAK,EAAE,mCAAmC;SAC7C,CACJ,CAAC;QACF,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,yBAAyB,CAAC,CAAC,EAAE,KAAK,EAAE,KAAK,EAAE,CAAC,EAAE,SAAS,EAAE,+CAA+C,CAAC,CAAC;QACpJ,YAAY,CAAC,KAAK,GAAG,wBAAwB,KAAK,IAAI,MAAM,IAAI,OAAO,EAAE,CAAC;IAC9E,CAAC;IAEM,IAAI,CAAC,MAAuB;QAC/B,OAAO,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,eAAe,CAAC,CAAC;IACzE,CAAC;IAEM,OAAO;QACV,IAAI,CAAC,eAAe,CAAC,OAAO,EAAE,CAAC;QAC/B,IAAI,CAAC,qBAAqB,CAAC,OAAO,EAAE,CAAC;IACzC,CAAC;CACJ","sourcesContent":["import { Constants } from \"core/Engines/constants\";\r\nimport type { Engine } from \"core/Engines/engine\";\r\nimport type { RenderTargetWrapper } from \"core/Engines/renderTargetWrapper\";\r\nimport type { InternalTexture } from \"core/Materials/Textures/internalTexture\";\r\nimport { CopyTextureToTexture } from \"core/Misc/copyTextureToTexture\";\r\n\r\n/** @internal */\r\nexport class FluidRenderingDepthTextureCopy {\r\n    private _engine: Engine;\r\n    private _depthRTWrapper: RenderTargetWrapper;\r\n    private _copyTextureToTexture: CopyTextureToTexture;\r\n\r\n    public get depthRTWrapper() {\r\n        return this._depthRTWrapper;\r\n    }\r\n\r\n    constructor(engine: Engine, width: number, height: number, samples = 1) {\r\n        this._engine = engine;\r\n        this._copyTextureToTexture = new CopyTextureToTexture(engine, true);\r\n\r\n        this._depthRTWrapper = this._engine.createRenderTargetTexture(\r\n            { width, height },\r\n            {\r\n                generateMipMaps: false,\r\n                type: Constants.TEXTURETYPE_UNSIGNED_BYTE,\r\n                format: Constants.TEXTUREFORMAT_R,\r\n                samplingMode: Constants.TEXTURE_NEAREST_SAMPLINGMODE,\r\n                generateDepthBuffer: true,\r\n                generateStencilBuffer: false,\r\n                samples,\r\n                noColorAttachment: true,\r\n                label: \"FluidRenderingDepthTextureCopyRTT\",\r\n            }\r\n        );\r\n        const depthTexture = this._depthRTWrapper.createDepthStencilTexture(0, false, false, 1, undefined, \"FluidRenderingDepthTextureCopyRTTDepthStencil\");\r\n        depthTexture.label = `FluidDepthTextureCopy${width}x${height}x${samples}`;\r\n    }\r\n\r\n    public copy(source: InternalTexture): boolean {\r\n        return this._copyTextureToTexture.copy(source, this._depthRTWrapper);\r\n    }\r\n\r\n    public dispose() {\r\n        this._depthRTWrapper.dispose();\r\n        this._copyTextureToTexture.dispose();\r\n    }\r\n}\r\n"]}