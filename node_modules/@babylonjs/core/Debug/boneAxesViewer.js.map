{"version":3,"file":"boneAxesViewer.js","sourceRoot":"","sources":["../../../../dev/core/src/Debug/boneAxesViewer.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,UAAU,EAAE,MAAM,qBAAqB,CAAC;AACjD,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAI/C,OAAO,EAAE,IAAI,EAAE,MAAM,oBAAoB,CAAC;AAE1C;;;GAGG;AACH,MAAM,OAAO,cAAe,SAAQ,UAAU;IAmB1C;;;;;;OAMG;IACH,YAAY,KAAY,EAAE,IAAU,EAAE,IAAU,EAAE,UAAU,GAAG,CAAC;QAC5D,KAAK,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC;QAjB7B,4BAA4B;QACrB,QAAG,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QAC5B,+BAA+B;QACxB,UAAK,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QAC9B,+BAA+B;QACxB,UAAK,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QAC9B,+BAA+B;QACxB,UAAK,GAAG,OAAO,CAAC,IAAI,EAAE,CAAC;QAY1B,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;QACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;IACrB,CAAC;IAED;;OAEG;IACI,MAAM;QACT,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAC1B,OAAO;SACV;QAED,MAAM,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC;QACvB,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QACtD,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAEtD,KAAK,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;IAC/D,CAAC;IAED,yBAAyB;IAClB,OAAO;QACV,IAAI,IAAI,CAAC,IAAI,EAAE;YACX,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YACjB,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;YAEjB,KAAK,CAAC,OAAO,EAAE,CAAC;SACnB;IACL,CAAC;CACJ","sourcesContent":["import type { Nullable } from \"../types\";\r\nimport { AxesViewer } from \"../Debug/axesViewer\";\r\nimport { Vector3 } from \"../Maths/math.vector\";\r\nimport type { Mesh } from \"../Meshes/mesh\";\r\nimport type { Bone } from \"../Bones/bone\";\r\nimport type { Scene } from \"../scene\";\r\nimport { Axis } from \"../Maths/math.axis\";\r\n\r\n/**\r\n * The BoneAxesViewer will attach 3 axes to a specific bone of a specific mesh\r\n * @see demo here: https://www.babylonjs-playground.com/#0DE8F4#8\r\n */\r\nexport class BoneAxesViewer extends AxesViewer {\r\n    /**\r\n     * Gets or sets the target mesh where to display the axes viewer\r\n     */\r\n    public mesh: Nullable<Mesh>;\r\n    /**\r\n     * Gets or sets the target bone where to display the axes viewer\r\n     */\r\n    public bone: Nullable<Bone>;\r\n\r\n    /** Gets current position */\r\n    public pos = Vector3.Zero();\r\n    /** Gets direction of X axis */\r\n    public xaxis = Vector3.Zero();\r\n    /** Gets direction of Y axis */\r\n    public yaxis = Vector3.Zero();\r\n    /** Gets direction of Z axis */\r\n    public zaxis = Vector3.Zero();\r\n\r\n    /**\r\n     * Creates a new BoneAxesViewer\r\n     * @param scene defines the hosting scene\r\n     * @param bone defines the target bone\r\n     * @param mesh defines the target mesh\r\n     * @param scaleLines defines a scaling factor for line length (1 by default)\r\n     */\r\n    constructor(scene: Scene, bone: Bone, mesh: Mesh, scaleLines = 1) {\r\n        super(scene, scaleLines);\r\n\r\n        this.mesh = mesh;\r\n        this.bone = bone;\r\n    }\r\n\r\n    /**\r\n     * Force the viewer to update\r\n     */\r\n    public update(): void {\r\n        if (!this.mesh || !this.bone) {\r\n            return;\r\n        }\r\n\r\n        const bone = this.bone;\r\n        bone.getAbsolutePositionToRef(this.mesh, this.pos);\r\n        bone.getDirectionToRef(Axis.X, this.mesh, this.xaxis);\r\n        bone.getDirectionToRef(Axis.Y, this.mesh, this.yaxis);\r\n        bone.getDirectionToRef(Axis.Z, this.mesh, this.zaxis);\r\n\r\n        super.update(this.pos, this.xaxis, this.yaxis, this.zaxis);\r\n    }\r\n\r\n    /** Releases resources */\r\n    public dispose() {\r\n        if (this.mesh) {\r\n            this.mesh = null;\r\n            this.bone = null;\r\n\r\n            super.dispose();\r\n        }\r\n    }\r\n}\r\n"]}