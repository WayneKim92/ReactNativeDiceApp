{"version":3,"file":"engineStore.js","sourceRoot":"","sources":["../../../../dev/core/src/Engines/engineStore.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAE,MAAM,oBAAoB,CAAC;AAMhD;;;GAGG;AACH,MAAM,OAAO,WAAW;IAapB;;OAEG;IACI,MAAM,KAAK,iBAAiB;QAC/B,IAAI,IAAI,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,EAAE;YAC7B,OAAO,IAAI,CAAC;SACf;QAED,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC;IACrD,CAAC;IAED;;OAEG;IACI,MAAM,KAAK,gBAAgB;QAC9B,OAAO,IAAI,CAAC,iBAAiB,CAAC;IAClC,CAAC;;AA5BD,uCAAuC;AACzB,qBAAS,GAAa,EAAE,CAAC;AAEvC;;;GAGG;AACW,uCAA2B,GAAG,IAAI,UAAU,EAAU,CAAC;AAErE,gBAAgB;AACF,6BAAiB,GAAoB,IAAI,CAAC;AAoBxD;;;GAGG;AACW,8BAAkB,GAAG,IAAI,CAAC;AAExC;;;GAGG;AACW,2BAAe,GAAG,EAAE,CAAC","sourcesContent":["import { Observable } from \"../Misc/observable\";\r\nimport type { Nullable } from \"../types\";\r\n\r\nimport type { Engine } from \"./engine\";\r\nimport type { Scene } from \"../scene\";\r\n\r\n/**\r\n * The engine store class is responsible to hold all the instances of Engine and Scene created\r\n * during the life time of the application.\r\n */\r\nexport class EngineStore {\r\n    /** Gets the list of created engines */\r\n    public static Instances: Engine[] = [];\r\n\r\n    /**\r\n     * Notifies when an engine was disposed.\r\n     * Mainly used for static/cache cleanup\r\n     */\r\n    public static OnEnginesDisposedObservable = new Observable<Engine>();\r\n\r\n    /** @internal */\r\n    public static _LastCreatedScene: Nullable<Scene> = null;\r\n\r\n    /**\r\n     * Gets the latest created engine\r\n     */\r\n    public static get LastCreatedEngine(): Nullable<Engine> {\r\n        if (this.Instances.length === 0) {\r\n            return null;\r\n        }\r\n\r\n        return this.Instances[this.Instances.length - 1];\r\n    }\r\n\r\n    /**\r\n     * Gets the latest created scene\r\n     */\r\n    public static get LastCreatedScene(): Nullable<Scene> {\r\n        return this._LastCreatedScene;\r\n    }\r\n\r\n    /**\r\n     * Gets or sets a global variable indicating if fallback texture must be used when a texture cannot be loaded\r\n     * @ignorenaming\r\n     */\r\n    public static UseFallbackTexture = true;\r\n\r\n    /**\r\n     * Texture content used if a texture cannot loaded\r\n     * @ignorenaming\r\n     */\r\n    public static FallbackTexture = \"\";\r\n}\r\n"]}