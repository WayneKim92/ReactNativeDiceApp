import type { FlowGraphContext } from "../../flowGraphContext";
import type { FlowGraphDataConnection } from "../../flowGraphDataConnection";
import { FlowGraphWithOnDoneExecutionBlock } from "../../flowGraphWithOnDoneExecutionBlock";
import type { IFlowGraphBlockConfiguration } from "../../flowGraphBlock";
/**
 * @experimental
 * Configuration for the set property block.
 */
export interface IFlowGraphSetPropertyBlockConfiguration extends IFlowGraphBlockConfiguration {
    /**
     * The path of the entity whose property will be set. Needs a corresponding
     * entity on the context variables.
     */
    path: string;
    /**
     * The property to set on the target object.
     */
    property: string;
    /**
     * A string that will be substituted by a node with the same name, if encountered enclosed by \{\}.
     * It will create an input data node which expects a number. The value of the node will be used
     * to substitute the string.
     */
    subString: string;
}
/**
 * @experimental
 * Block that sets a property on a target object.
 */
export declare class FlowGraphSetPropertyBlock<ValueT> extends FlowGraphWithOnDoneExecutionBlock {
    config: IFlowGraphSetPropertyBlockConfiguration;
    /**
     * Input connection: The value to set on the property.
     */
    readonly value: FlowGraphDataConnection<ValueT>;
    constructor(config: IFlowGraphSetPropertyBlockConfiguration);
    private _setProperty;
    _execute(context: FlowGraphContext): void;
    getClassName(): string;
}
