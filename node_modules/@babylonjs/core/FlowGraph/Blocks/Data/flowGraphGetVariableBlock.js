import { FlowGraphBlock } from "../../flowGraphBlock.js";
import { RichTypeString, RichTypeAny } from "../../flowGraphRichTypes.js";
import { RegisterClass } from "../../../Misc/typeStore.js";
/**
 * A block that gets the value of a variable.
 * @experimental
 */
export class FlowGraphGetVariableBlock extends FlowGraphBlock {
    /**
     * Construct a FlowGraphGetVariableBlock.
     * @param params optional construction parameters
     */
    constructor(config) {
        super(config);
        this.variableName = this._registerDataInput("variableName", RichTypeString);
        this.output = this._registerDataOutput("output", RichTypeAny);
    }
    /**
     * @internal
     */
    _updateOutputs(context) {
        const variableNameValue = this.variableName.getValue(context);
        if (context.hasVariable(variableNameValue)) {
            this.output.setValue(context.getVariable(variableNameValue), context);
        }
    }
    getClassName() {
        return "FGGetVariableBlock";
    }
}
RegisterClass("FGGetVariableBlock", FlowGraphGetVariableBlock);
//# sourceMappingURL=flowGraphGetVariableBlock.js.map