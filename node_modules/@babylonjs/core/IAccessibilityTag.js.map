{"version":3,"file":"IAccessibilityTag.js","sourceRoot":"","sources":["../../../dev/core/src/IAccessibilityTag.ts"],"names":[],"mappings":"","sourcesContent":["/**\r\n * Define an interface for a node to indicate it's info for accessibility.\r\n * By default, Node type doesn't imply accessibility info unless this tag is assigned. Whereas GUI controls already indicate accessibility info, but one can override the info using this tag.\r\n */\r\nexport interface IAccessibilityTag {\r\n    /**\r\n     * A string as alt text of the node, describing what the node is/does, for accessibility purpose.\r\n     */\r\n    description?: string;\r\n\r\n    /**\r\n     * Customize the event of the accessible object.\r\n     * This will be applied on the generated HTML twin node.\r\n     */\r\n    eventHandler?: { [key in keyof HTMLElementEventMap]: (e?: Event) => void };\r\n\r\n    /**\r\n     * ARIA roles and attributes to customize accessibility support.\r\n     * If you use BabylonJS's accessibility html twin renderer, and want to override the default behavior (not suggested), this can be your way.\r\n     * Learn more about ARIA: https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA\r\n     */\r\n    role?: AcceptedRole;\r\n    aria?: { [key in AcceptedARIA]: any };\r\n}\r\n\r\n// Based on https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles\r\ntype AcceptedRole =\r\n    | \"toolbar\"\r\n    | \"tooltip\"\r\n    | \"feed\"\r\n    | \"math\"\r\n    | \"presentation\"\r\n    | \"none\"\r\n    | \"note\"\r\n    | \"application\"\r\n    | \"article\"\r\n    | \"cell\"\r\n    | \"columnheader\"\r\n    | \"definition\"\r\n    | \"directory\"\r\n    | \"document\"\r\n    | \"figure\"\r\n    | \"group\"\r\n    | \"heading\"\r\n    | \"img\"\r\n    | \"list\"\r\n    | \"listitem\"\r\n    | \"meter\"\r\n    | \"row\"\r\n    | \"rowgroup\"\r\n    | \"rowheader\"\r\n    | \"separator\"\r\n    | \"table\"\r\n    | \"term\"\r\n    | \"scrollbar\"\r\n    | \"searchbox\"\r\n    | \"separator\"\r\n    | \"slider\"\r\n    | \"spinbutton\"\r\n    | \"switch\"\r\n    | \"tab\"\r\n    | \"tabpanel\"\r\n    | \"treeitem\"\r\n    | \"combobox\"\r\n    | \"menu\"\r\n    | \"menubar\"\r\n    | \"tablist\"\r\n    | \"tree\"\r\n    | \"treegrid\"\r\n    | \"banner\"\r\n    | \"complementary\"\r\n    | \"contentinfo\"\r\n    | \"form\"\r\n    | \"main\"\r\n    | \"navigation\"\r\n    | \"region\"\r\n    | \"search\"\r\n    | \"alert\"\r\n    | \"log\"\r\n    | \"marquee\"\r\n    | \"status\"\r\n    | \"timer\"\r\n    | \"alertdialog\"\r\n    | \"dialog\";\r\n\r\n// Based on https://developer.mozilla.org/en-US/docs/web/Accessibility/ARIA/Attributes#aria_attribute_types\r\ntype AcceptedARIA =\r\n    | \"aria-autocomplete\"\r\n    | \"aria-checked\"\r\n    | \"aria-disabled\"\r\n    | \"aria-errormessage\"\r\n    | \"aria-expanded\"\r\n    | \"aria-haspopup\"\r\n    | \"aria-hidden\"\r\n    | \"aria-invalid\"\r\n    | \"aria-label\"\r\n    | \"aria-level\"\r\n    | \"aria-modal\"\r\n    | \"aria-multiline\"\r\n    | \"aria-multiselectable\"\r\n    | \"aria-orientation\"\r\n    | \"aria-placeholder\"\r\n    | \"aria-pressed\"\r\n    | \"aria-readonly\"\r\n    | \"aria-required\"\r\n    | \"aria-selected\"\r\n    | \"aria-sort\"\r\n    | \"aria-valuemax\"\r\n    | \"aria-valuemin\"\r\n    | \"aria-valuenow\"\r\n    | \"aria-valuetext\"\r\n    | \"aria-busy\"\r\n    | \"aria-live\"\r\n    | \"aria-relevant\"\r\n    | \"aria-atomic\"\r\n    | \"aria-dropeffect\"\r\n    | \"aria-grabbed\"\r\n    | \"aria-activedescendant\"\r\n    | \"aria-colcount\"\r\n    | \"aria-colindex\"\r\n    | \"aria-colspan\"\r\n    | \"aria-controls\"\r\n    | \"aria-describedby\"\r\n    | \"aria-description\"\r\n    | \"aria-details\"\r\n    | \"aria-errormessage\"\r\n    | \"aria-flowto\"\r\n    | \"aria-labelledby\"\r\n    | \"aria-owns\"\r\n    | \"aria-posinset\"\r\n    | \"aria-rowcount\"\r\n    | \"aria-rowindex\"\r\n    | \"aria-rowspan\"\r\n    | \"aria-setsize\";\r\n"]}